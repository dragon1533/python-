函数
	定义
		函数以def关键词开头，后接函数名和圆括号()。
			def functionname (parameters):
			        functionsuite
			        return [expression]
		函数执行的代码以冒号起始，并且缩进。
		return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回None。
	调用
	参数
		位置参数 (positional argument)
			def functionname(arg1)
		默认参数 (default argument)
			def functionname(arg1, arg2=v)
		可变参数 (variable argument)
			def functionname(arg1, arg2=v, *args):
				可变参数就是传入的参数个数是可变的，可以是 0, 1, 2 到任意个，是不定长的参数
				*args - 可变参数，可以是从零个到任意个，自动组装成元组。
				加了星号（*）的变量名会存放所有未命名的变量参数
		关键字参数 (keyword argument)
			def functionname(arg1, arg2=v, args, *kw)
				**kw - 关键字参数，可以是从零个到任意个，自动组装成字典
		命名关键字参数 (name keyword argument)
			def functionname(arg1, arg2=v, args, *, nkw, *kw):
				*, nkw - 命名关键字参数，用户想要输入的关键字参数，定义方式是在nkw 前面加个分隔符 *
		参数组合
			*args 是可变参数，args 接收的是一个 tuple
			**kw 是关键字参数，kw 接收的是一个 dict
		变量作用域
			定义在函数内部的变量拥有局部作用域，该变量称为局部变量。
			定义在函数外部的变量拥有全局作用域，该变量称为全局变量
		闭包
			是函数式编程的一个重要的语法结构，是一种特殊的内嵌函数。
			如果在一个内部函数里对外层非全局作用域的变量进行引用，那么内部函数就被认为是闭包。
			通过闭包可以访问外层非全局作用域的变量，这个作用域称为 闭包作用域
				闭包的返回值通常是函数
		递归
			如果一个函数在内部调用自身本身，这个函数就是递归函数
	类型
		第一类：用 def 关键词定义的正规函数
		第二类：用 lambda 关键词定义的匿名函数

匿名函数
	lambda argument_list: expression
		filter(function, iterable) 过滤序列，过滤掉不符合条件的元素，返回一个迭代器对象，如果要转换为列表，可以使用 list() 来转换
		map(function, *iterables) 根据提供的函数对指定序列做映射

类与对象
	对象 = 属性 + 方法
		对象是类的实例
			关键字 class 定义 Python 类，关键字后面紧跟类的名称、分号和类的实现
		继承：子类自动共享父类之间数据和方法的机制
		多态：不同对象对同一方法响应不同的行动

魔法方法
	self 相当于 C++ 的 this 指针
	类有一个名为__init__(self[, param1, param2...])的魔法方法，该方法在类实例化时会自动调用
	继承
		如果子类中定义与父类同名的方法或属性，则会自动覆盖父类对应的方法或属性
			调用未绑定的父类方法Fish.__init__(self)
			使用super函数super().__init__()
	组合
	类、类对象和实例对象
		类对象：创建一个类，其实也是一个对象也在内存开辟了一块空间，称为类对象，类对象只有一个。
			class A(object):
		实例对象：就是通过实例化类创建的对象，称为实例对象，实例对象可以有多个
		类属性：类里面方法外面定义的变量称为类属性
		实例属性：实例属性和具体的某个实例对象有关系，并且一个实例对象和另外一个实例对象是不共享属性的
			属性与方法名相同，属性会覆盖方法
	迭代器
		迭代器有两个基本的方法：iter() 和 next()。
		iter(object) 函数用来生成迭代器。
		next(iterator[, default]) 返回迭代器的下一个项目。
		iterator -- 可迭代对象
		default -- 可选，用于设置在没有下一个元素时返回该默认值，如果不设置，又没有下一个元素则会触发 StopIteration 异常
	生成器
		使用了 yield 的函数被称为生成器
			生成器是一个返回迭代器的函数，只能用于迭代操作
			调用一个生成器函数，返回的是一个迭代器对象
	__init__(self[, ...]) 构造器，当一个实例被创建的时候调用的初始化方法
